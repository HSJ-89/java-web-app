# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  CACHE_KEY: maven | $(Agent.OS) | **/pom.xml
  CACHE_FALLBACK_KEY: maven | $(Agent.OS)


steps:


- task: Maven@3
  displayName: 'Build Artifact'
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: 'package'

- task: CopyFiles@2
  inputs:
    Contents: '*.yaml'
    TargetFolder: '$(build.artifactStagingDirectory)'
    CleanTargetFolder: true
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish WAR as Artifact'
  inputs:
    PathtoPublish: '$(build.artifactStagingDirectory)'
    ArtifactName: 'ear'

- task: Docker@2
  inputs:
    containerRegistry: 'acrconn'
    repository: 'samplewar'
    command: 'buildAndPush'
    Dockerfile: '**/Dockerfile1'